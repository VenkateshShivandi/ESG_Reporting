name: RAG System Tests

on:
  push:
    branches: [feature/*]
    paths:
      - "rag/**"
      - ".github/workflows/rag-test.yml"
  pull_request:
    branches: [feature/*]
    paths:
      - "rag/**"
      - ".github/workflows/rag-test.yml"

jobs:
  test-rag:
    name: Run RAG System Tests
    runs-on: ubuntu-latest

    # Add Neo4j service container
    services:
      neo4j:
        image: neo4j:5.15
        env:
          NEO4J_AUTH: none
          NEO4J_PLUGINS: '["graph-data-science"]'
          NEO4J_dbms_memory_pagecache_size: 1G
          NEO4J_dbms_memory_heap_initial__size: 1G
          NEO4J_dbms_memory_heap_max__size: 1G
        ports:
          - 7687:7687
          - 7474:7474
        options: >-
          --health-cmd "cypher-shell -u neo4j -p neo4j 'RETURN 1' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 30s

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "**/requirements*.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install test dependencies from requirements-test.txt
          # This file contains OpenAI 1.x and excludes helicone
          pip install -r rag/requirements-test.txt

      - name: Show openai version
        run: pip show openai

      # Wait for Neo4j to be ready
      - name: Wait for Neo4j
        run: |
          timeout 60 bash -c 'until nc -z localhost 7687; do sleep 2; done'
          echo "Neo4j is ready"

      - name: Run pytest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HELICONE_API_KEY: ${{ secrets.HELICONE_API_KEY }}
          # Neo4j environment variables
          NEO4J_URI: bolt://localhost:7687
          NEO4J_USERNAME: neo4j
          NEO4J_PASSWORD: ""
        run: |
          pytest rag/tests/ -v

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rag-test-results
          path: |
            rag/tests/reports/
            rag/tests/.coverage
          retention-days: 5
