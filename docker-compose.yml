services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.production
    depends_on:
      - backend
      - rag
    networks:
      - esg-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5050:5000"
    env_file:
      - ./backend/.env.local
    networks:
      - esg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s

  rag:
    build:
      context: ./rag
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 120s
    env_file:
      - ./rag/.env.local
    networks:
      - esg-network

  neo4j:
    image: neo4j:5.18
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: none
      NEO4J_PLUGINS: '["graph-data-science"]'
    networks:
      - esg-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s


  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - esg-network


networks:
  esg-network:
